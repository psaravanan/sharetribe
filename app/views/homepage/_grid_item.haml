- content_for :extra_javascript do
  = javascript_include_tag 'modestmaps.min.js'
  = javascript_include_tag 'follow2.js'

:css
  #main-wrap {
    overflow: hidden;
  }

  .home-fluid-thumbnail-grid-item{
      float: left;
      width: 50%;
  }
  
:javascript
  var count = 0;
  var places = [];
  window.onload = function(){
        initMap();
    };
  var map;
  var pointsOnMap = [];
  var initMap = function() {
    var mm = com.modestmaps;
    var template = 'http://otile2.mqcdn.com/tiles/1.0.0/osm/{Z}/{X}/{Y}.jpg';
    var subdomains = ['', 'a.', 'b.', 'c.'];
    var provider = new mm.TemplatedLayer(template, subdomains);
    var centerLat = 37.811530;
    var centerLong = -122.2666097;

    map = new mm.Map('map', provider)
    
    for(var i =0; i < places.length; i++){
    //add new points to array for later manipulation
    //console.log(places[i].lat);
     pointsOnMap[places[i].id] = new mm.Follower(map, new mm.Location(places[i].lat, places[i].long), "$"+ places[i].price+" SGD");
     
     if(i==0) {
        centerLat = places[i].lat;
        centerLong = places[i].long;
     }
     
    }
    
    //center it at first point
    map.setCenterZoom(new mm.Location(centerLat, centerLong), 12);
  }
  
  //function for mouseover change.
  function changeFill(el){
    var bubble = el.querySelector("#bubble");
    var bubCtx = bubble.getContext('2d');
    bubCtx.fillStyle = "#006666";
    bubCtx.fill();
  }
  
  //function to change back on mouseout.
  function changeBack(el){
    var bubble = el.querySelector("#bubble");
    var bubCtx = bubble.getContext('2d');
    bubCtx.fillStyle = "rgb(247, 68, 68)";
    bubCtx.fill();
  }


-@listings.each do |listing|
  :javascript
      count++;
      //console.log(count);
      var test = "/listings/#{listing.url}"
      var run = httpGet(test);
      var teststring = '<input id="origin_loc_latitude" name="origin_loc[latitude]" type="hidden" value="'
      var teststring2 = '<input id="origin_loc_longitude" name="origin_loc[longitude]" type="hidden" value="'
      var index = run.indexOf(teststring);
      var index2 = run.indexOf(teststring2)
      var go = run.substring(index + teststring.length, index + teststring.length+10);
      var go2 = run.substring(index2 + teststring2.length, index2 + teststring2.length+10);
      
      var lat = parseFloat(go);
      var long = parseFloat(go2);
      //console.log(lat + " " + long);
      
      var place = {
      price: "#{listing.price}",
      id: "#{listing.id}",
      lat: lat,
      long: long,
      }
      places.push(place);
      function httpGet(theUrl)
      {
          var xmlHttp = new XMLHttpRequest();
          xmlHttp.open( "GET", theUrl, false ); // false for synchronous request
          xmlHttp.send( null );
          return xmlHttp.responseText;
      }

- frontpage_fragment_cache("grid_item", listing) do
  .col-6
    %div
      -# Listing image
      = render :partial => "layouts/grid_item_listing_image", :locals => {:listing => listing, :modifier_class => ""}

      -# Listing author details
      .home-fluid-thumbnail-grid-author
        .home-fluid-thumbnail-grid-author-avatar
          = link_to(person_path(id: listing.author.username)) do
            = image_tag(listing.author.avatar.thumb, :class => "home-fluid-thumbnail-grid-author-avatar-image")
        = link_to(person_path(id: listing.author.username), :class => "home-fluid-thumbnail-grid-author-name") do
          = PersonViewUtils::person_entity_display_name(listing.author, @current_community.name_display_type)
  .col-md-4.pad-top-30
    #map