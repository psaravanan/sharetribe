- content_for :javascript do
  initialize_homepage();

- content_for :coverfade_class do
  = "without-text"

- content_for :title_header do
  - with_big_cover_photo do
    %h1.marketplace-lander-content-title= community_slogan.html_safe
    %p= community_description.html_safe
    .search-form
      - if @current_community.private?
        %a.inline-big-button{href: sign_up_path}
          .content
            = t("layouts.application.connect")
      - else
        - if(feature_enabled?(:location_search))
          = render :partial => "location_bar"
        - else
          = render :partial => "search_bar"
  - with_small_cover_photo do
    .browse-view-search-form
      - if(feature_enabled?(:location_search))
        = render :partial => "location_bar"
      - else
        = render :partial => "search_bar"

.container
  %ul.bxslider
    - SliderImage.all.each do |slide|
      %a{:href => "#{slide.image_url}"}
        %img{:src => slide.avatar,:style=>"width:100%;"}
        
        =# image_tag(slide.avatar.url,:style=>"width:100%;")
    / %li
    /   %a{:href => "#"}
    /     %img{:src => slide.avatar.url", :title => ""}/
    / %li
    /   %a{:href => "#"}
    /     %img{:src => "/assets/images/2.jpg", :title => ""}/
    / %li
    /   %a{:href => "#"}
    /     %img{:src => "/assets/images/3.jpg", :title => ""}/
    / %li
    /   %a{:href => "#"}
    /     %img{:src => "/assets/images/4.jpg", :title => ""}/
    / %li
    /   %a{:href => "#"}
    /     %img{:src => "/assets/images/5.jpg", :title => ""}/
    / %li
    /   %a{:href => "#"}
    /     %img{:src => "/assets/images/6.jpg", :title => ""}/
    / %li
    /   %a{:href => "#"}
    /     %img{:src => "/assets/images/7.jpg", :title => ""}/
    / %li
    /   %a{:href => "#"}
    /     %img{:src => "/assets/images/8.jpg", :title => ""}/                  
      
- if @current_community.private? && show_big_cover_photo?
  - if @community_customization && @community_customization.private_community_homepage_content
    .community-customization-wrapper
      = @community_customization.private_community_homepage_content.html_safe
  - else
    = t(".this_is_private_community")

- else

  .home-toolbar

    - if listing_shape_menu_enabled || @category_menu_enabled
      .home-toolbar-show-filters-button-container
        .home-toolbar-show-filters-button#home-toolbar-show-filters
          = t(".filter")

    .home-toolbar-button-group{:class => listing_shape_menu_enabled || @category_menu_enabled ? "filters-enabled" : ""}
      - ["grid", "list", "map"].each do |view_type|
        - selected_class = @view_type == view_type ? "selected" : ""
        = link_to params.merge(view: view_type), :class => "home-toolbar-button-group-button #{selected_class}", :title => t("homepage.filters.#{view_type}_button") do
          = icon_tag(view_type, ["icon-fix", "home-button-group-icon"])
          %span.home-toolbar-button-text
            = t("homepage.filters.#{view_type}_button")

    - if listing_shape_menu_enabled || @category_menu_enabled
      .home-toolbar-filters.home-toolbar-filters-mobile-hidden#home-toolbar-filters
        - if listing_shape_menu_enabled
          .toggle-container.home-toolbar-toggle-container
            .toggle.with-borders#home_toolbar-select-share-type{data: {toggle: '.home-toolbar-share-type-menu'}}
              .toggle-header-container
                .toggle-header
                  - if selected_shape
                    = t(selected_shape[:name_tr_key])
                  - else
                    = t("homepage.filters.all_listing_types")

                = icon_tag("dropdown", ["icon-dropdown"])

            .home-toolbar-share-type-menu.toggle-menu.hidden
              = link_to t("homepage.filters.all_listing_types"), params.merge({transaction_type: "all"})
              - shapes.each do |shape|
                = link_to params.merge({transaction_type: shape[:name]}), class:  "toggle-menu-subitem" do
                  = t(shape[:name_tr_key])

        - if @show_categories
          .toggle-container.home-toolbar-toggle-container.hidden-tablet
            .toggle.with-borders{data: {toggle: '#home-toolbar-categories-menu'}}
              .toggle-header-container
                .toggle-header
                  - if @selected_category
                    = @selected_category.display_name(I18n.locale)
                  - else
                    = t("homepage.filters.all_categories")

                = icon_tag("dropdown", ["icon-dropdown"])
            #home-toolbar-categories-menu.toggle-menu
              = link_to t("homepage.filters.all_categories"), params.merge({category: "all"})
              - @main_categories.each do |category|
                = link_to category.display_name(I18n.locale), params.merge({category: category})
                - if category.children
                  - category.children.each do |child|
                    - is_selected = @selected_category == child
                    = link_to child.display_name(I18n.locale), params.merge({category: child}), :class => "toggle-menu-subitem"

        / Filters
        .hidden-tablet
          - # Filters will be relocated to #desktop-filters when in desktop
          #filters
            = render :partial => "filters", :locals => { show_price_filter: show_price_filter, show_custom_fields: @show_custom_fields }

  .row
    .col-md-8.pad-top-30
  %form#commentForm.form-horizontal{:action => "#", :method => "post", :role => "form"}
    .form-group
      .col-sm-2.gap-10
        %select#sel1.form-control
          %option{:value => "1"} Dates
          %option{:value => "2"} Times
      .col-sm-3.gap-10
        %input#adaad.wid-100.form-control{"data-format" => "YYYY-MM-DD", "data-lang" => "en", "data-years" => "2015-2035", :type => "text"}
      .col-sm-3.gap-10
        %input#adaadd.wid-100.form-control{"data-format" => "YYYY-MM-DD", "data-lang" => "en", "data-years" => "2015-2035", :type => "text"}
    /
      <div class="form-group">
      <div class="col-sm-2 gap-10">
      </div>
      <div class="col-sm-3 gap-10">
      <input type="text" class="wid-100 form-control">
      </div>
      <div class="col-sm-3 gap-10">
      <input type="text" class="wid-100 form-control">
      </div>
      </div>
    





    .gap-10
      %label
        %h4 City
      .col-sm-3.gap-10
        %select#sel1.form-control
          %option{:value => "1"} Option
          %option{:value => "1"} Option1
          %option{:value => "1"} Option2
          %option{:value => "1"} Option3
      %label
        %h4 Spacessy Type
      .col-sm-3.gap-10
        %select#sel1.form-control
          %option{:value => "1"} Option
          %option{:value => "1"} Option1
          %option{:value => "1"} Option2
          %option{:value => "1"} Option3
    .form-group
      .col-12.visible-tablet
        .row
          %label
            %h4.pad-lft Price
          .col-10
            .custom-filter-options.pad-top-10.gap-10
              #range-slider-price.range-slider.noUi-target.noUi-ltr.noUi-horizontal.noUi-background
            .left
              %span.custom-filter-min-max-title Min:
              %span#price-filter-min-value 0
              %input#price_min{:name => "price_min", :type => "hidden", :value => "0"}
            .right
              %span.custom-filter-min-max-title Max:
              %span#price-filter-max-value 5000
              %input#price_max{:name => "price_max", :type => "hidden", :value => "5000"}
        %hr/
    %button#showmore.hidemore{:type => "button"} More
    #moreview.moreview{:style => "display:none;"}
      .form-group
        #close.col-sm-12.gap-10{:style => "text-align:right;", :type => "button"} X
        .col-sm-6.gap-10
          %h4 Spacessy Type
          %hr/
          - @current_community.custom_fields.sort.each do |field|

            - field.with_type do |type|
              - if [:dropdown, :checkbox].include?(type)
                .row
                  .col-12
                    .custom-filter-title
                      = field.name(I18n.locale)
                    - make_scrollable = field.options.size > 10
                    .custom-filter-options{:class => make_scrollable ? "scrollable" : ""}
                      - field.options.sort.each do |option|
                        .col-sm-6.gap-10.pad-lft
                          .custom-filter-checkbox-container
                            %label.custom-filter-checkbox-label
                              - param_name = type == :dropdown ? "filter_option_#{option.id}" : "checkbox_filter_option_#{option.id}"
                              = check_box_tag param_name, "#{option.id}", params[param_name]
                              %span.custom-filter-checkbox-label-text
                                = option.title(I18n.locale)


            - field.with(:numeric) do
              .row
                .col-12
                  .custom-filter-title
                    = field.name(I18n.locale)
              .row
                .col-12
                  .custom-filter-options
                    - id = ["range-slider", field.id].join("-")
                    .range-slider{id: id}
                      - range = [field.min, field.max]
                      - start = [params["nf_min_" + field.id.to_s] || field.min, params["nf_max_" + field.id.to_s] || field.max]
                      - labels = ["#custom-filter-min-value-#{id}", "#custom-filter-max-value-#{id}"]
                      - fields = ["#nf_min_#{id}", "#nf_max_#{id}"]

                      - content_for :extra_javascript do
                        :javascript
                          window.ST.rangeFilter("##{id}", #{range}, #{start}, #{labels}, #{fields}, #{field.allow_decimals})

              .row
                .col-12
                  .left
                    %span.custom-filter-min-max-title= t(".min")
                    %span{id: "custom-filter-min-value-#{id}"}
                    %input{type: "hidden", id: "nf_min_#{id}", name: "nf_min_#{field.id}", value: params["nf_min_#{field.id}"]}
                  .right
                    %span.custom-filter-min-max-title= t(".max")
                    %span{id: "custom-filter-max-value-#{id}"}
                    %input{type: "hidden", id: "nf_max_#{id}", name: "nf_max_#{field.id}", value: params["nf_max_#{field.id}"]}

          %button{type: 'submit'}
            = t("homepage.custom_filters.update_view")









    - if @category_menu_enabled
      .col-3.visible-tablet
        - if @show_categories
          .row
            .col-12
              = link_to t("homepage.filters.all_categories"), params.merge({category: "all"}), :class => "home-categories-main #{if @selected_category.nil? then 'selected' end}"
              - @main_categories.each do |category|
                - show_subcategories = show_subcategory_list(category, Maybe(@selected_category).id.to_i.or_else(nil))
                = link_to category.display_name(I18n.locale), params.merge({category: category}), :class => "home-categories-main #{if show_subcategories then 'selected' end} #{if category.has_subcategories? then 'has-subcategories' end}", :data => {category: category.id}
                - if category.children
                  - if show_subcategories
                    - category.children.each do |child|
                      - is_selected = @selected_category == child
                      = link_to child.display_name(I18n.locale), params.merge({category: child}), :class => "home-categories-sub #{if is_selected then 'selected' end}", :data => {:"sub-category" =>child.id}

        #desktop-filters
          - # Filters will be relocated here when in desktop

    - main_container_class = if @category_menu_enabled then "col-9" else "col-12" end
    %div{:class => main_container_class}
      - if @listings.total_entries > 0
        - if @view_type.eql?("map")
          .home-map
            = render :partial => "map"
        - else
          - if @view_type.eql?("grid")
            %div{class: @category_menu_enabled ? "home-fluid-thumbnail-grid-narrow" : "home-fluid-thumbnail-grid-wide"}
              .home-fluid-thumbnail-grid
                = render :partial => "grid_item", :collection => @listings, :as => :listing
          - else
            .home-listings
              = render :partial => "list_item", :collection => @listings, :as => :listing, locals:{shape_name_map: shape_name_map, testimonials_in_use: testimonials_in_use}
          .home-loading-more
            = will_paginate(@listings)
            - item_container = if @view_type.eql?("grid") then '.home-fluid-thumbnail-grid' else '.home-listings' end
            = pageless(@listings.total_pages, item_container, request.fullpath, t('.loading_more_content'))
      - else
        .home-no-listings
          - if params[:q] || params[:category] || params[:share_type] # Some filter in use
            = t(".no_listings_with_your_search_criteria")
          - else
            = t(".no_listings_notification", :add_listing_link => link_to(t(".add_listing_link_text"), new_listing_path)).html_safe




