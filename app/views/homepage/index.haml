- slider_images = SliderImage.all
- content_for :extra_javascript do
  = javascript_include_tag 'modestmaps.min.js'
  = javascript_include_tag 'follow2.js'

:css
  #map {
    float:right;
    width: 100%;
    height: 700px;
    margin-left: -150px;
    }
  #main-wrap {
    overflow: hidden;
  }

:javascript
  var count = 0;
  var places = [];
  window.onload = function(){
        initMap();
    };
  var map;
  var pointsOnMap = [];
  var initMap = function() {
    var mm = com.modestmaps;
    var template = 'http://otile2.mqcdn.com/tiles/1.0.0/osm/{Z}/{X}/{Y}.jpg';
    var subdomains = ['', 'a.', 'b.', 'c.'];
    var provider = new mm.TemplatedLayer(template, subdomains);
    var centerLat = 37.811530;
    var centerLong = -122.2666097;

    map = new MM.Map('map', provider, null, []);
    
    for(var i =0; i < places.length; i++){
    //add new points to array for later manipulation
    //console.log(places[i].lat);
     pointsOnMap[places[i].id] = new mm.Follower(map, new mm.Location(places[i].lat, places[i].long), "$"+ places[i].price+" SGD");
     
     if(i==0) {
        centerLat = places[i].lat;
        centerLong = places[i].long;
     }
     
    }
    
    //center it at first point
    map.setCenterZoom(new mm.Location(centerLat, centerLong), 12);
  }
  
  //function for mouseover change.
  function changeFill(el){
    var bubble = el.querySelector("#bubble");
    var bubCtx = bubble.getContext('2d');
    bubCtx.fillStyle = "#006666";
    bubCtx.fill();
  }
  
  //function to change back on mouseout.
  function changeBack(el){
    var bubble = el.querySelector("#bubble");
    var bubCtx = bubble.getContext('2d');
    bubCtx.fillStyle = "rgb(247, 68, 68)";
    bubCtx.fill();
  }


-@listings.each do |listing|
  :javascript
      count++;
      //console.log(count);
      var test = "/listings/#{listing.url}"
      var run = httpGet(test);
      var teststring = '<input id="origin_loc_latitude" name="origin_loc[latitude]" type="hidden" value="'
      var teststring2 = '<input id="origin_loc_longitude" name="origin_loc[longitude]" type="hidden" value="'
      var index = run.indexOf(teststring);
      var index2 = run.indexOf(teststring2)
      var go = run.substring(index + teststring.length, index + teststring.length+10);
      var go2 = run.substring(index2 + teststring2.length, index2 + teststring2.length+10);
      
      var lat = parseFloat(go);
      var long = parseFloat(go2);
      //console.log(lat + " " + long);
      
      var place = {
      price: "#{listing.price}",
      id: "#{listing.id}",
      lat: lat,
      long: long,
      }
      places.push(place);
      function httpGet(theUrl)
      {
          var xmlHttp = new XMLHttpRequest();
          xmlHttp.open( "GET", theUrl, false ); // false for synchronous request
          xmlHttp.send( null );
          return xmlHttp.responseText;
      }

- content_for :javascript do
  initialize_homepage();

.container-fluid
  .row.top
    -unless params[:value].present?
      #bs-carousel.carousel.fade-carousel.slide{"data-interval" => "12000", "data-ride" => "carousel"}
        / Indicators
        %ol.carousel-indicators
          -(0...slider_images.count).each do |val|
            %li{ :class=>"#{(val==0 ? 'active' : '')}", "data-slide-to" => "#{val}", "data-target" => "#bs-carousel"}
        / Wrapper for slides
        .carousel-inner
          - slider_images.each_with_index do |slide,index|
            - if index == 0
              .item.slides.active
                .slide
                  %img{:alt => "slide", :src => "#{slide.avatar}", :width => "1920", :height => "450"}/
                .hero
                  %hgroup
                    %h1.gap-10
                      Where would you like to
                      = succeed "work" do
                        %br/
                      today?
                    %h3 Your Office Anywhere, Anytime
                  .search-form
                    %form#homepage-filters{:method => "get"}
                      - if @current_community.private?
                        %a.inline-big-button{href: sign_up_path}
                          .content
                            = t("layouts.application.connect")
                      - else
                        - if(feature_enabled?(:location_search))
                          = render :partial => "location_bar"
                        - else
                          = render :partial => "search_bar"
            - else
              .item.slides
                .slide
                  %img{:alt => "slide", :src => "#{slide.avatar}", :width => "1920", :height => "450"}/
                .hero
                  %hgroup
                    %h1.gap-10
                      Where would you like to
                      = succeed "work" do
                        %br/
                      today?
                    %h3 Your Office Anywhere, Anytime
                  .browse-view-search-form
                    %form#homepage-filters{:method => "get"}
                      - if(feature_enabled?(:location_search))
                        = render :partial => "location_bar"
                      - else
                        = render :partial => "search_bar"
             
      / carousel-inner close
    / carousel close
  / row close
/ container-fluid close
- if @listings.blank?
  %h1#message.gap-10
    %font{:size => "5", :color => "red"}
      No results found, Try again 
.container-fluid
  .row
    .col-md-12.pad-top-10
      %form{method: "get", id: "homepage-filters", :class=> "form-horizontal"}
        - params.except("action", "controller", "q", "view", "utf8").each do |param, value|
          - unless param.match(/^filter_option/) || param.match(/^checkbox_filter_option/) || param.match(/^nf_/) || param.match(/^price_/)
            = hidden_field_tag param, value
        = hidden_field_tag "view", @view_type
        .form-group.row
          / .col-sm-3.gap-10
          /   %label Dates
          / .col-sm-3.gap-10
          /   %input#adaad.wid-100.form-control{"data-format" => "YYYY-MM-DD", "data-lang" => "en", "data-years" => "2015-2035", :type => "text"}
          / .col-sm-3.gap-10
          /   %input#adaadd.wid-100.form-control{"data-format" => "YYYY-MM-DD", "data-lang" => "en", "data-years" => "2015-2035", :type => "text"}
          / .col-sm-3.gap-10
          /   %select#sel1.form-control
          /     %option{:value => "1"} 1 Guest
          /     %option{:value => "1"} 2 Guest
          /     %option{:value => "1"} 3 Guest
          /     %option{:value => "1"} 4 Guest
          .col-sm-2.gap-10
            %label City
          .col-sm-4.gap-10
            %select#sel1.form-control
              - if params[:category] == "all"
                %option{:value=>"all", :selected=>"selected"  }
                  = (link_to t("homepage.filters.all_categories"), params.merge({category: "all"}), :class => "home-categories-main #{if @selected_category.nil? then 'selected' end}").html_safe
              - else
                %option{:value=>"all"}
                  = (link_to t("homepage.filters.all_categories"), params.merge({category: "all"}), :class => "home-categories-main #{if @selected_category.nil? then 'selected' end}")
              - @main_categories.each do |category|
                - show_subcategories = show_subcategory_list(category, Maybe(@selected_category).id.to_i.or_else(nil))
                
                - if params[:category] == category.display_name(I18n.locale).downcase
                  %option{:value=> category.display_name(I18n.locale), :selected=>"selected" }
                    = link_to category.display_name(I18n.locale), params.merge({category: category}), :class => "home-categories-main #{if show_subcategories then 'selected' end} #{if category.has_subcategories? then 'has-subcategories' end}", :data => {category: category.id}
                - else
                  %option{:value=> category.display_name(I18n.locale)}
                    = link_to category.display_name(I18n.locale), params.merge({category: category}), :class => "home-categories-main #{if show_subcategories then 'selected' end} #{if category.has_subcategories? then 'has-subcategories' end}", :data => {category: category.id}
                - if category.children
                  - if show_subcategories
                    - category.children.each do |child|
                      - is_selected = @selected_category == child
                      
                      - if params[:category] == child.display_name(I18n.locale).downcase
                        %option{:value=> child.display_name(I18n.locale), :selected=> "selected" }
                          = link_to child.display_name(I18n.locale), params.merge({category: child}), :class => "home-categories-sub #{if is_selected then 'selected' end}", :data => {:"sub-category" =>child.id}
                      -else 
                        %option{:value=> child.display_name(I18n.locale) }
                          = link_to child.display_name(I18n.locale), params.merge({category: child}), :class => "home-categories-sub #{if is_selected then 'selected' end}", :data => {:"sub-category" =>child.id}
          / .col-sm-2.gap-10
          /   %label Spacessy Type
          / .col-sm-4.gap-10
          /   %select#sel1.form-control
          /     %option{:value => "1"} Option
          /     %option{:value => "1"} Option1
          /     %option{:value => "1"} Option2
          /     %option{:value => "1"} Option3

        .form-group.row
          .col-sm-4.gap-10
            %label{:for => "amount"} Price Range:
          .col-md-10.gap-10
            %input#amount.gap-10{:readonly => "", :style => "border:0; color:#FF6666;margin-left: -154px; width: 10%;", :type => "text"}
              #slider-range
          %input{type: "hidden", id: "price_min", name: "price_min", value: params["price_min"]}
          %input{type: "hidden", id: "price_max", name: "price_max", value: params["price_max"]}
        .row.pad-top-20
        .col-sm-12.sidebar
          %button.btn.btn-danger.mini-submenu{:role => "button", :style => "display: block;"} More
          .list-group{:style=>"display:none;"}
            %span.list-group-item.active
              Submenu
              %span#slide-submenu.pull-right
                %i.fa.fa-times
            .form-group
              #close.col-sm-12.gap-10{:style => "text-align:right;", :type => "button"}        
              - @current_community.custom_fields.sort.each do |field|                
                - field.with_type do |type|
                  .col-sm-6.gap-10
                    - if [:dropdown, :checkbox].include?(type)
                      %h4  
                        = field.name(I18n.locale)
                      %hr
                      - make_scrollable = field.options.size > 10
                      - field.options.sort.each do |option|
                    
                        %label{:style=>"font-weight: 200 !important;"}
                          - param_name = type == :dropdown ? "filter_option_#{option.id}" : "checkbox_filter_option_#{option.id}"
                          = check_box_tag param_name, "#{option.id}", params[param_name]
                          %span 
                            = option.title(I18n.locale)



                - field.with(:numeric) do
                  .row
                    .col-12
                      .custom-filter-title
                        = field.name(I18n.locale)
                  .row
                    .col-12
                      .custom-filter-options
                        - id = ["range-slider", field.id].join("-")
                        .range-slider{id: id}
                          - range = [field.min, field.max]
                          - start = [params["nf_min_" + field.id.to_s] || field.min, params["nf_max_" + field.id.to_s] || field.max]
                          - labels = ["#custom-filter-min-value-#{id}", "#custom-filter-max-value-#{id}"]
                          - fields = ["#nf_min_#{id}", "#nf_max_#{id}"]

                          - content_for :extra_javascript do
                            :javascript
                              window.ST.rangeFilter("##{id}", #{range}, #{start}, #{labels}, #{fields}, #{field.allow_decimals})

                  .row
                    .col-12
                      .left
                        %span.custom-filter-min-max-title= t(".min")
                        %span{id: "custom-filter-min-value-#{id}"}
                        %input{type: "hidden", id: "nf_min_#{id}", name: "nf_min_#{field.id}", value: params["nf_min_#{field.id}"]}
                      .right
                        %span.custom-filter-min-max-title= t(".max")
                        %span{id: "custom-filter-max-value-#{id}"}
                        %input{type: "hidden", id: "nf_max_#{id}", name: "nf_max_#{field.id}", value: params["nf_max_#{field.id}"]}

            %br
              .col-sm-8.gap-10
                %button{type: 'submit'}
                  = t("homepage.custom_filters.update_view")
      .row.pad-top-20
        .col-sm-12.gap-10
          .pull-right
            %a#list{:href => "#"}
              %span.glyphicon.glyphicon-list
            %a#grid{:href => "#"}
              %span.glyphicon.glyphicon-th
            %span
              = link_to '', homepage_index_path(:value => 'true'), :class => 'glyphicon glyphicon-map-marker', :id => 'grid1' 
        .col-sm-12.gap-10
          #products.row.list-group    
            = render :partial => "new_grid_item", :collection => @listings, :as => :listing

  -if params[:value].present?
    .col-md-4.pad-top-30
      %iframe{:allowfullscreen => "", :frameborder => "0", :height => "800", :src => "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d5938.979980771974!2d12.44768382450996!3d41.90382425201743!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x1325890a57d42d3d%3A0x94f9ab23a7eb0!2sVatican+City!5e0!3m2!1sen!2sin!4v1449305682968", :style => "border:0", :width => "100%"}

    .col-md-4.pad-top-30
      #map
